{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/Container/Container.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Container","children","className","styles","container","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onFormSubmit","reset","this","onSubmit","form","type","placeholder","onChange","disabled","Component","ContactListItem","onDeleteContact","onClick","ContactList","contacts","map","id","Filter","App","filter","contactId","shortid","generate","addContact","find","contact","toLowerCase","alert","filterContacts","deleteContact","prevState","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","contactsToShow","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0fd7ade.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-name\":\"ContactListItem_contact-name__3Niiy\",\"delete-contact-btn\":\"ContactListItem_delete-contact-btn__1aKON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1Boej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list-item\":\"ContactList_list-item__1b2nR\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onFormSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name === '') {\r\n      return;\r\n    }\r\n\r\n    this.props.onFormSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            className=\"input-field\"\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Phone Number\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Enter phone number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            className=\"input-field\"\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className={[`button ${styles['form-btn']}`]}\r\n          disabled={name === '' || number === '' ? true : false}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\r\n  <>\r\n    <p>\r\n      <span className={styles['contact-name']}>{name}: </span>\r\n      {number}\r\n    </p>\r\n\r\n    <button\r\n      type=\"button\"\r\n      onClick={onDeleteContact}\r\n      className={[`button ${styles['delete-contact-btn']}`]}\r\n    >\r\n      Delete\r\n    </button>\r\n  </>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className={styles['list-item']} key={id}>\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label className=\"label\">\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n      className=\"input-field\"\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  contactId = shortid.generate();\n\n  addContact = ({ name, number }) => {\n    const isInContacts = this.state.contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  filterContacts = event => {\n    const { value } = event.target;\n\n    this.setState({\n      filter: value,\n    });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const contactsToShow = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onFormSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterContacts} />\n        <ContactList\n          contacts={contactsToShow}\n          onDeleteContact={this.deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__hlKvl\",\"form-btn\":\"ContactForm_form-btn__2MBE2\"};"],"sourceRoot":""}